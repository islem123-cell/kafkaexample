

#utiliser pour établir les connexions initiales au cluster Kafka
spring.kafka.consumer.bootstrap-servers= http://localhost:9092 


#Une chaîne unique qui identifie le groupe de consommateurs auquel appartient ce consommateur.
spring.kafka.consumer.group-id= myGroup

#ce faire lorsqu'il n'y a pas de décalage initial dans Kafka ou si le décalage actuel n'existe plus sur le serveur.
spring.kafka.consumer.auto-offset-reset= earliest

#Classe de désérialisation des clés.
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer: org.apache.kafka.common.serialization.StringDeserializer


#pour convertir JSON en objet Java(Classe de désérialisation pour les valeurs)

spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer 

spring.kafka.consumer.properties.spring.json.trusted.packages=*


spring.kafka.producer.bootstrap-servers= http://localhost:9092

#Classe de sérialiseur pour les clés
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer: org.apache.kafka.common.serialization.StringSerializer

#pour convertir l'objet Java en JSON (Classe de sérialisation pour les valeurs)
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer



#connect mongodb
spring.data.mongodb.uri=mongodb+srv://abdellaouiisslem:<naimaabdellaoui>@pfa.zupndhn.mongodb.net/?retryWrites=true&w=majority
spring.data.mongodb.database=














